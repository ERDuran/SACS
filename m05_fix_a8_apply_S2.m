%% calc t s and rho
clearvars('-except', '*_path')

load([data_path 'SACS_data/aus8_coor'])
load([data_path 'SACS_data/aus8'])
load([data_path 'SACS_data/aus8_monthly'])
load([data_path 'SACS_data/SmSan02'])

lat = aus8_coor.lat;
lon = aus8_coor.lon;
depth = aus8_coor.depth;
topog = SmSan02.topo_sm_interp;
Months = aus8_coor.Months;


%% increase vertical resolution
aus8_coor.bottom_depth = NaN([length(lat), length(lon)]);

aus8_temp.mean = aus8.temp.mean;
aus8_salt.mean = aus8.salt.mean;

for t = 1 : 12
    aus8_temp.(Months{t}) = aus8_monthly.temp.(Months{t});
    aus8_salt.(Months{t}) = aus8_monthly.salt.(Months{t});
end

for m = 1 : length(lat)
    for n = 1 : length(lon)
        last_finite = ...
            find(isfinite(squeeze(aus8.temp.mean(m,n,:))), ...
            1, 'last');
        % apply SmSan02 mask
        if ~isempty(last_finite)
            aus8_coor.bottom_depth(m,n) = depth(last_finite);
            if topog(m,n) > aus8_coor.bottom_depth(m,n)
                land_idx = depth <= topog(m,n);
                aus8_temp.mean(m,n,land_idx) = NaN;
                aus8_salt.mean(m,n,land_idx) = NaN;
            end
        end
        
        new_last_finite = ...
            find(isfinite(squeeze(aus8_temp.mean(m,n,:))), ...
            1, 'last');
        
        above_first_NaN = ...
            find(isnan(squeeze(aus8_temp.mean(m,n,:))), ...
            1, 'first') -1;
        % interpolate cavities
        if above_first_NaN ~= new_last_finite
            aus8_temp.mean(m,n,:) = ...
                fixgaps(squeeze(aus8_temp.mean(m,n,:)));
            aus8_salt.mean(m,n,:) = ...
                fixgaps(squeeze(aus8_salt.mean(m,n,:)));
        end
        
        for t = 1 : 12
            if ~isempty(last_finite)
                if topog(m,n) > aus8_coor.bottom_depth(m,n)
                    aus8_temp.(Months{t})(m,n,land_idx) = NaN;
                    aus8_salt.(Months{t})(m,n,land_idx) = NaN;
                end
            end
            if above_first_NaN ~= new_last_finite
                aus8_temp.(Months{t})(m,n,:) = ...
                    fixgaps(squeeze(...
                    aus8_temp.(Months{t})(m,n,:)));
                aus8_salt.(Months{t})(m,n,:) = ...
                    fixgaps(squeeze(...
                    aus8_salt.(Months{t})(m,n,:)));
            end
        end
    end
    fprintf('lat = %5.3f\n', lat(m))
end


%% pcolor_maker 
fig_n = 1;
rowcols = [3 2];
rowcols_size = [8 5]; % cm
margs = [1 1 1 1]; % cm
gaps = [1 1]; % cm

for sp = 1 : rowcols(1)*rowcols(2)
    axis_setup{sp} = ...
        [aus8_coor.lon(1) aus8_coor.lon(end) ...
        aus8_coor.lat(end) aus8_coor.lat(1)];
    x{sp} = aus8_coor.lon;
    y{sp} = aus8_coor.lat;
end
    
z_ind = {0 0 -400 -400 -1000 -1000};
data = {...
    aus8_temp.mean(:,:,depth==z_ind{1}), ...
    aus8_salt.mean(:,:,depth==z_ind{2}), ...
    aus8_temp.mean(:,:,depth==z_ind{3}), ...
    aus8_salt.mean(:,:,depth==z_ind{4}), ...
    aus8_temp.mean(:,:,depth==z_ind{5}), ...
    aus8_salt.mean(:,:,depth==z_ind{6})};
minmax = {...
    [8 20], ...
    [34 36], ...
    [min(min(data{3}))+2 max(max(data{3}))-2], ...
    [min(min(data{4}))+0.2 max(max(data{4}))-0.2], ...
    [min(min(data{5})) max(max(data{5}))], ...
    [min(min(data{6})) max(max(data{6}))]};
cmaps_levels = 12;
cmaps = {...
    flipud(othercolor('RdYlBu8', cmaps_levels)), ...
    flipud(othercolor('PuOr8', cmaps_levels)), ...
    flipud(othercolor('RdYlBu8', cmaps_levels)), ...
    flipud(othercolor('PuOr8', cmaps_levels)), ...
    flipud(othercolor('RdYlBu8', cmaps_levels)), ...
    flipud(othercolor('PuOr8', cmaps_levels))};
titles = {...
    ['aus8 mean $temp$ $z=' num2str(z_ind{1}) '$ ($^{\circ}C$)'], ...
    ['aus8 mean $salt$ $z=' num2str(z_ind{2}) '$ ($psu$)'], ...
    ['aus8 mean $temp$ $z=' num2str(z_ind{3}) '$ ($^{\circ}C$)'], ...
    ['aus8 mean $salt$ $z=' num2str(z_ind{4}) '$ ($psu$)'], ...
    ['aus8 mean $temp$ $z=' num2str(z_ind{5}) '$ ($^{\circ}C$)'], ...
    ['aus8 mean $salt$ $z=' num2str(z_ind{6}) '$ ($psu$)']};
font_size = 9;
fig_color = [0.7 0.7 0.7];

fig = pcolor_maker(...
    fig_n, rowcols, rowcols_size, margs, gaps, ...
    x, y, data, axis_setup, minmax, cmaps, ...
    titles, font_size, fig_color);
outputls = ls(figures_path);
scriptname = mfilename;
if ~contains(outputls, scriptname)
    mkdir(figures_path, scriptname)
end
export_fig(fig, ...
    [figures_path mfilename '/' scriptname(1:3) ...
    '_fig' num2str(fig_n) '_'], ...
    '-m3')
close


%% pcolor_maker
fig_n = 2;
rowcols = [3 4];
rowcols_size = [8 5]; % cm
margs = [1 1 1 1]; % cm
gaps = [1 1]; % cm

z_ind = {0 0 0 0 -400 -400 -400 -400 -1000 -1000 -1000 -1000};
Months_ind = {'Jan', 'Apr', 'Jul', 'Oct', 'Jan', 'Apr', 'Jul', 'Oct', ...
    'Jan', 'Apr', 'Jul', 'Oct',};
cmaps_levels = 12;

for sp = 1 : rowcols(1)*rowcols(2)
    x{sp} = aus8_coor.lon;
    y{sp} = aus8_coor.lat;
    axis_setup{sp} = ...
        [aus8_coor.lon(1) aus8_coor.lon(end) ...
        aus8_coor.lat(end) aus8_coor.lat(1)];
    data{sp} = aus8_temp.(Months_ind{sp})(:,:,depth==z_ind{sp});
    titles{sp} = ['aus8 ' Months_ind{sp} ...
        ' $temp$ $z=' num2str(z_ind{sp}) '$ ($^{\circ}C$)'];
    cmaps{sp} = flipud(othercolor('RdYlBu8', cmaps_levels));
end

minmax = {...
    [8 20], ...
    [8 20], ...
    [8 20], ...
    [8 20], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5]};

font_size = 9;
fig_color = [0.7 0.7 0.7];

fig = pcolor_maker(...
    fig_n, rowcols, rowcols_size, margs, gaps, ...
    x, y, data, axis_setup, minmax, cmaps, ...
    titles, font_size, fig_color);
outputls = ls(figures_path);
scriptname = mfilename;
if ~contains(outputls, scriptname)
    mkdir(figures_path, scriptname)
end
export_fig(fig, ...
    [figures_path mfilename '/' scriptname(1:3) ...
    '_fig' num2str(fig_n) '_'], ...
    '-m3')
close


%% pcolor_maker
fig_n = 3;
rowcols = [3 4];
rowcols_size = [8 5]; % cm
margs = [1 1 1 1]; % cm
gaps = [1 1]; % cm

z_ind = {0 0 0 0 -400 -400 -400 -400 -1000 -1000 -1000 -1000};
Months_ind = {'Jan', 'Apr', 'Jul', 'Oct', 'Jan', 'Apr', 'Jul', 'Oct', ...
    'Jan', 'Apr', 'Jul', 'Oct',};
cmaps_levels = 12;

for sp = 1 : rowcols(1)*rowcols(2)
    x{sp} = aus8_coor.lon;
    y{sp} = aus8_coor.lat;
    axis_setup{sp} = ...
        [aus8_coor.lon(1) aus8_coor.lon(end) ...
        aus8_coor.lat(end) aus8_coor.lat(1)];
    data{sp} = aus8_salt.(Months_ind{sp})(:,:,depth==z_ind{sp});
    titles{sp} = ['aus8 ' Months_ind{sp} ...
        ' $salt$ $z=' num2str(z_ind{sp}) '$ ($psu$)'];
    cmaps{sp} = flipud(othercolor('PuOr8', cmaps_levels));
end

minmax = {...
    [34 36], ...
    [34 36], ...
    [34 36], ...
    [34 36], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))]};

font_size = 9;
fig_color = [0.7 0.7 0.7];

fig = pcolor_maker(...
    fig_n, rowcols, rowcols_size, margs, gaps, ...
    x, y, data, axis_setup, minmax, cmaps, ...
    titles, font_size, fig_color);
outputls = ls(figures_path);
scriptname = mfilename;
if ~contains(outputls, scriptname)
    mkdir(figures_path, scriptname)
end
export_fig(fig, ...
    [figures_path mfilename '/' scriptname(1:3) ...
    '_fig' num2str(fig_n) '_'], ...
    '-m3')
close


%% save updated a8c
save([data_path 'SACS_data/aus8_coor'], 'aus8_coor')
save([data_path 'SACS_data/aus8_temp'], 'aus8_temp')
save([data_path 'SACS_data/aus8_salt'], 'aus8_salt')
disp('aus8_coor aus8_temp aus8_salt DONE')


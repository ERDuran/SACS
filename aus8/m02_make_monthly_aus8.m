%% make monthly variations
clearvars('-except', '*_path')

load([data_path 'SACS_data/aus8'])
load([data_path 'SACS_data/aus8_coor'])
lat = aus8_coor.lat;
lon = aus8_coor.lon;
depth = aus8_coor.depth;


%%
days_in_months = [...
    31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
time_step = NaN(1,12);
time_step(1) = days_in_months(1)/2;
for p = 2 : 12
    time_step(p) = ...
        time_step(p-1) + days_in_months(p-1)/2 + days_in_months(p)/2;
end

month_names = {...
    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', ...
    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'};
aus8_coor.month_names = month_names;
save([data_path 'SACS_data/aus8_coor'], 'aus8_coor')

% time cycle setup
time_serie = 2 * pi / 365 * time_step;

for ll = 1 : 12
    temp_monthly = NaN(size(aus8.temp.mean));
    salt_monthly = NaN(size(aus8.salt.mean));
    
    for kk = 1 : length(depth)
        if depth(kk) >= aus8.depth_semiann(end)
            temp_monthly(:,:,kk) = ...
                ... % mean component
                aus8.temp.mean(:,:,kk) + ...
                ... % annual component
                aus8.temp.an_cos(:,:,kk)*cos(time_serie(ll)) + ...
                aus8.temp.an_sin(:,:,kk)*sin(time_serie(ll)) + ...
                ... % semi-annual component
                aus8.temp.sa_cos(:,:,kk)*cos(2*time_serie(ll)) + ...
                aus8.temp.sa_sin(:,:,kk)*sin(2*time_serie(ll));
            
            salt_monthly(:,:,kk) = ...
                aus8.salt.mean(:,:,kk) + ...
                aus8.salt.an_cos(:,:,kk)*cos(time_serie(ll)) + ...
                aus8.salt.an_sin(:,:,kk)*sin(time_serie(ll)) + ...
                aus8.salt.sa_cos(:,:,kk)*cos(2*time_serie(ll)) + ...
                aus8.salt.sa_sin(:,:,kk)*sin(2*time_serie(ll));
            
            % depths above the annual component max depth
        elseif depth(kk) >= aus8.depth_ann(end)
            temp_monthly(:,:,kk) = ...
                ... % mean component
                aus8.temp.mean(:,:,kk) + ...
                ... % annual component
                aus8.temp.an_cos(:,:,kk)*cos(time_serie(ll)) + ...
                aus8.temp.an_sin(:,:,kk)*sin(time_serie(ll));
            
            salt_monthly(:,:,kk) = ...
                aus8.salt.mean(:,:,kk) + ...
                aus8.salt.an_cos(:,:,kk)*cos(time_serie(ll)) + ...
                aus8.salt.an_sin(:,:,kk)*sin(time_serie(ll));
            
            % anything below the max depth of the annual component
            % is the simply the mean
        else
            temp_monthly(:,:,kk) = ...
                ... % mean component
                aus8.temp.mean(:,:,kk);
            
            salt_monthly(:,:,kk) = ...
                aus8.salt.mean(:,:,kk);
        end
    end
    
    aus8_monthly.temp.(month_names{ll}) = temp_monthly;
    aus8_monthly.salt.(month_names{ll}) = salt_monthly;
    disp([month_names{ll} ' OK!'])
end


%% pcolor_maker
fig_n = 1;
rowcols = [3 4];
rowcols_size = [8 5]; % cm
margs = [1 1 1 1]; % cm
gaps = [1 1]; % cm

z_ind = {0 0 0 0 -400 -400 -400 -400 -1000 -1000 -1000 -1000};
month_ind = {'Jan', 'Apr', 'Jul', 'Oct', 'Jan', 'Apr', 'Jul', 'Oct', ...
    'Jan', 'Apr', 'Jul', 'Oct',};
cmaps_levels = 12;

for sp = 1 : rowcols(1)*rowcols(2)
    x{sp} = aus8_coor.lon;
    y{sp} = aus8_coor.lat;
    axis_setup{sp} = ...
        [aus8_coor.lon(1) aus8_coor.lon(end) ...
        aus8_coor.lat(end) aus8_coor.lat(1)];
    data{sp} = aus8_monthly.temp.(month_ind{sp})(:,:,depth==z_ind{sp});
    titles{sp} = ['aus8 ' month_ind{sp} ...
        ' $temp$ $z=' num2str(z_ind{sp}) '$ ($^{\circ}C$)'];
    cmaps{sp} = flipud(othercolor('RdYlBu8', cmaps_levels));
end

minmax = {...
    [8 20], ...
    [8 20], ...
    [8 20], ...
    [8 20], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{5}))+2 max(max(data{5}))-2], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5], ...
    [min(min(data{9})) max(max(data{9}))-0.5]};

font_size = 9;
fig_color = [0.7 0.7 0.7];

fig = pcolor_maker(...
    fig_n, rowcols, rowcols_size, margs, gaps, ...
    x, y, data, axis_setup, minmax, cmaps, ...
    titles, font_size, fig_color);
outputls = ls(figures_path);
scriptname = mfilename;
if ~contains(outputls, scriptname)
    mkdir(figures_path, scriptname)
end
export_fig(fig, ...
    [figures_path mfilename '/' scriptname(1:3) ...
    '_fig' num2str(fig_n) '_'], ...
    '-m3')
close


%% pcolor_maker
fig_n = 2;
rowcols = [3 4];
rowcols_size = [8 5]; % cm
margs = [1 1 1 1]; % cm
gaps = [1 1]; % cm

z_ind = {0 0 0 0 -400 -400 -400 -400 -1000 -1000 -1000 -1000};
month_ind = {'Jan', 'Apr', 'Jul', 'Oct', 'Jan', 'Apr', 'Jul', 'Oct', ...
    'Jan', 'Apr', 'Jul', 'Oct',};
cmaps_levels = 12;

for sp = 1 : rowcols(1)*rowcols(2)
    x{sp} = aus8_coor.lon;
    y{sp} = aus8_coor.lat;
    axis_setup{sp} = ...
        [aus8_coor.lon(1) aus8_coor.lon(end) ...
        aus8_coor.lat(end) aus8_coor.lat(1)];
    data{sp} = aus8_monthly.salt.(month_ind{sp})(:,:,depth==z_ind{sp});
    titles{sp} = ['aus8 ' month_ind{sp} ...
        ' $salt$ $z=' num2str(z_ind{sp}) '$ ($psu$)'];
    cmaps{sp} = flipud(othercolor('PuOr8', cmaps_levels));
end

minmax = {...
    [34 36], ...
    [34 36], ...
    [34 36], ...
    [34 36], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{5}))+0.2 max(max(data{5}))-0.2], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))], ...
    [min(min(data{9})) max(max(data{9}))]};

font_size = 9;
fig_color = [0.7 0.7 0.7];

fig = pcolor_maker(...
    fig_n, rowcols, rowcols_size, margs, gaps, ...
    x, y, data, axis_setup, minmax, cmaps, ...
    titles, font_size, fig_color);
outputls = ls(figures_path);
scriptname = mfilename;
if ~contains(outputls, scriptname)
    mkdir(figures_path, scriptname)
end
export_fig(fig, ...
    [figures_path mfilename '/' scriptname(1:3) ...
    '_fig' num2str(fig_n) '_'], ...
    '-m3')
close


%% save aus8_coast
save([data_path 'SACS_data/aus8_monthly'], 'aus8_monthly')
disp('aus8_monthly DONE')

